M
N <- matrix( c( 5,4,8,2), 2, 2, TRUE)
N
#a)
M %*% N
#b)
M %*% solve(N)
#c)
M %*% t(N)
#d)
3 *( (M %*% solve(N)) +( M %*% t(N) ) )
#4 SPL
library(matlib)
J <- matrix( c(1, -2, 3, 2, 1, 1, -3, 2, -2), 3, 3, TRUE)
J
j <- c(7, 4, -10)
j
# show the equation
showEqn(J , j )
# find solution
Solve(J , j )
# Solution used reduced echelon form
plotEq(J , j )
# Solution used reduced echelon form
plotEqn(J , j )
# find solution
Solve(J , j )
# Solution used reduced echelon form
plotEqn(J , j )
#CPMK - 19523118 - 19523201 - 19523199
library(matlib)
#a)
A <- matrix( c( 1,2,3,4,5,6,7,8,9), 3, 3, TRUE)
colnames(A) <- c('col1','col2','col3')
rownames(A) <- c('row1','row2','row3')
A
#b)
diag(A)
#c)
det(A)
#d)
solve(A)
#e)
t(A) %*% A
B <- matrix( c(1,1,3, 5,2,6, -2,-1,-3), 3, 3, TRUE)
B
#a
B <- B%*%B%*%B
B
#b
B <- matrix( c(1,1,2, 5,2,7, -2,-1,-3), 3, 3, TRUE)
B
M <- matrix( c( 1,2,3,8,2,9), 3, 2, TRUE)
M
N <- matrix( c( 5,4,8,2), 2, 2, TRUE)
N
#a)
M %*% N
#b)
M %*% solve(N)
#c)
M %*% t(N)
#d)
3 *( (M %*% solve(N)) +( M %*% t(N) ) )
#4 SPL
J <- matrix( c(1, -2, 3, 2, 1, 1, -3, 2, -2), 3, 3, TRUE)
J
j <- c(7, 4, -10)
j
# show the equation
showEqn(J , j )
# find solution
Solve(J , j )
# Solution used reduced echelon form
plotEqn(J , j )
Z <- solve(J) %*% j
Z
X <- matrix( c( 1,2,3,4,5,6,7,8,9), 3, 3, TRUE)
X
for (r in 1:3 ){
for (c in 1:3 ){
if( r==1 ){
if( c==1 | c==2 | c==3){
X[r,c]=0
}
}
if ( c==1 ){
if ( r==2 | r==3 ){
X[r,c]=1
}
}
}
}
X
#f)
eigen(A)
# show the equation
showEqn3d(J , j )
# show the equation
showEqn3D(J , j )
# find solution
Solve(J , j )
# Solution used reduced echelon form
plotEqn(J , j )
#f)
eigen(A)
# Solution used reduced echelon form
plotEqn(J , j )
# Solution used reduced echelon form
plotEqn3d(J , j )
library(matlib)
#d)
solve(A)
#CPMK - 19523118 - 19523201 - 19523199
library(matlib)
#a)
A <- matrix( c( 1,2,3,4,5,6,7,8,9), 3, 3, TRUE)
colnames(A) <- c('col1','col2','col3')
rownames(A) <- c('row1','row2','row3')
A
#b)
diag(A)
#c)
det(A)
#d)
solve(A)
#e)
t(A) %*% A
#f)
eigen(A)
#CPMK - 19523118 - 19523201 - 19523199
library(matlib)
#a)
A <- matrix( c( 1,2,3,4,5,6,7,8,9), 3, 3, TRUE)
colnames(A) <- c('col1','col2','col3')
rownames(A) <- c('row1','row2','row3')
A
#b)
diag(A)
#c)
det(A)
#d)
solve(A)
#e)
t(A) %*% A
library(matlib)
#a)
A <- matrix( c( 1,2,3,4,5,6,7,8,9), 3, 3, TRUE)
colnames(A) <- c('col1','col2','col3')
rownames(A) <- c('row1','row2','row3')
A
#b)
diag(A)
#c)
det(A)
#d)
solve(A)
#CPMK - 19523118 - 19523201 - 19523199
library(matlib)
#a)
A <- matrix( c( 1,2,3,4,5,6,7,8,9), 3, 3, TRUE)
colnames(A) <- c('col1','col2','col3')
rownames(A) <- c('row1','row2','row3')
A
#b)
diag(A)
#c)
det(A)
#d)
solve(A)
#d)
Solve(A)
#CPMK - 19523118 - 19523201 - 19523199
library(matlib)
#a)
A <- matrix( c( 1,2,3,4,5,6,7,8,9), 3, 3, TRUE)
colnames(A) <- c('col1','col2','col3')
rownames(A) <- c('row1','row2','row3')
A
#b)
diag(A)
#c)
det(A)
#d)
Solve(A)
#e)
t(A) %*% A
#f)
eigen(A)
B <- matrix( c(1,1,3, 5,2,6, -2,-1,-3), 3, 3, TRUE)
B
#a
B <- B%*%B%*%B
B
#b
B <- matrix( c(1,1,2, 5,2,7, -2,-1,-3), 3, 3, TRUE)
B
M <- matrix( c( 1,2,3,8,2,9), 3, 2, TRUE)
M
N <- matrix( c( 5,4,8,2), 2, 2, TRUE)
N
#a)
M %*% N
#b)
M %*% solve(N)
#c)
M %*% t(N)
#d)
3 *( (M %*% solve(N)) +( M %*% t(N) ) )
#4 SPL
J <- matrix( c(1, -2, 3, 2, 1, 1, -3, 2, -2), 3, 3, TRUE)
J
j <- c(7, 4, -10)
j
# show the equation
showEqn(J , j )
# find solution
Solve(J , j )
# Plot equation
plotEqn3d(J , j )
#
echelon(J, j)
#
echelon(J, j)
X <- matrix( c( 1,2,3,4,5,6,7,8,9), 3, 3, TRUE)
X
for (r in 1:3 ){
for (c in 1:3 ){
if( r==1 ){
if( c==1 | c==2 | c==3){
X[r,c]=0
}
}
if ( c==1 ){
if ( r==2 | r==3 ){
X[r,c]=1
}
}
}
}
X
#c)
det(A)
#d)
Solve(A)
#e)
t(A) %*% A
#f)
eigen(A)
#CPMK - 19523118 - 19523201 - 19523199
library(matlib)
#1 . Matrix
#a)
A <- matrix( c( 1,2,3,4,5,6,7,8,9), 3, 3, TRUE)
colnames(A) <- c('col1','col2','col3')
rownames(A) <- c('row1','row2','row3')
A
#b)
diag(A)
#c)
det(A)
#d)
Solve(A)
#e)
t(A) %*% A
#f)
eigen(A)
#2. Matrix
B <- matrix( c(1,1,3, 5,2,6, -2,-1,-3), 3, 3, TRUE)
B
#a
B <- B%*%B%*%B
B
#b
B <- matrix( c(1,1,2, 5,2,7, -2,-1,-3), 3, 3, TRUE)
B
#3. Matrix
M <- matrix( c( 1,2,3,8,2,9), 3, 2, TRUE)
M
N <- matrix( c( 5,4,8,2), 2, 2, TRUE)
N
#a)
M %*% N
#b)
M %*% solve(N)
#c)
M %*% t(N)
#d)
3 *( (M %*% solve(N)) +( M %*% t(N) ) )
#4 SPL
J <- matrix( c(1, -2, 3, 2, 1, 1, -3, 2, -2), 3, 3, TRUE)
J
j <- c(7, 4, -10)
j
# show the equation
showEqn(J , j )
# find solution
Solve(J , j )
# Plot equation
plotEqn3d(J , j )
#
echelon(J, j)
#5
X <- matrix( c( 1,2,3,4,5,6,7,8,9), 3, 3, TRUE)
X
for (r in 1:3 ){
for (c in 1:3 ){
if( r==1 ){
if( c==1 | c==2 | c==3){
X[r,c]=0
}
}
if ( c==1 ){
if ( r==2 | r==3 ){
X[r,c]=1
}
}
}
}
X
# echelon form
echelon(J, j, verbose= TRUE, fraction= TRUE)
#a
B <- B%*%B%*%B
B
X <- matrix( c( 1,2,3,4,5,6,7,8,9), 3, 3, TRUE)
X
for (r in 1:3 ){
for (c in 1:3 ){
if( r==1 ){
if( c==1 | c==2 | c==3){
X[r,c]=0
}
}
if ( c==1 ){
if ( r==2 | r==3 ){
X[r,c]=1
}
}
}
}
X
if ( r==2 | r==3 ){
X[r,c]=1
}
}
}
}
X
X <- matrix( c( 1,2,3,4,5,6,7,8,9), 3, 3, TRUE)
X
for (r in 1:3 ){
if ( r==2 | r==3 ){
X[r,c]=1
}
}
}
}
X
#5
X <- matrix( c( 1,2,3,4,5,6,7,8,9), 3, 3, TRUE)
X
```{r}
for (r in 1:3 ){
for (c in 1:3 ){
if( r==1 ){
if( c==1 | c==2 | c==3){
X[r,c]=0
}
}
if ( c==1 ){
if ( r==2 | r==3 ){
X[r,c]=1
}
}
}
}
```
#5
```{r}
X <- matrix( c( 1,2,3,4,5,6,7,8,9), 3, 3, TRUE)
X
for (r in 1:3 ){
for (c in 1:3 ){
if( r==1 ){
if( c==1 | c==2 | c==3){
X[r,c]=0
}
}
if ( c==1 ){
if ( r==2 | r==3 ){
X[r,c]=1
}
}
}
}
X
```
```{r}
A <- matrix( c( 1,2,3,4,5,6,7,8,9), 3, 3, TRUE)
colnames(A) <- c('col1','col2','col3')
rownames(A) <- c('row1','row2','row3')
#a)
```{r}
A <- matrix( c( 1,2,3,4,5,6,7,8,9), 3, 3, TRUE)
A <- matrix( c( 1,2,3,4,5,6,7,8,9), 3, 3, TRUE)
colnames(A) <- c('col1','col2','col3')
rownames(A) <- c('row1','row2','row3')
A
A <- matrix( c( 1,2,3,4,5,6,7,8,9), 3, 3, TRUE)
colnames(A) <- c('col1','col2','col3')
rownames(A) <- c('row1','row2','row3')
A
diag(A)
det(A)
Solve(A)
t(A) %*% A
eigen(A)
B <- matrix( c(1,1,3, 5,2,6, -2,-1,-3), 3, 3, TRUE)
B
B <- B%*%B%*%B
B
B <- matrix( c(1,1,2, 5,2,7, -2,-1,-3), 3, 3, TRUE)
B
M <- matrix( c( 1,2,3,8,2,9), 3, 2, TRUE)
M
N <- matrix( c( 5,4,8,2), 2, 2, TRUE)
N
M %*% N
M %*% solve(N)
M %*% t(N)
3 *( (M %*% solve(N)) +( M %*% t(N) ) )
J <- matrix( c(1, -2, 3, 2, 1, 1, -3, 2, -2), 3, 3, TRUE)
J
j <- c(7, 4, -10)
j
showEqn(J , j )
Solve(J , j )
plotEqn3d(J , j )
echelon(J, j, verbose= TRUE, fraction= TRUE)
X <- matrix( c( 1,2,3,4,5,6,7,8,9), 3, 3, TRUE)
X
for (r in 1:3 ){
for (c in 1:3 ){
if( r==1 ){
if( c==1 | c==2 | c==3){
X[r,c]=0
}
}
if ( c==1 ){
if ( r==2 | r==3 ){
X[r,c]=1
}
}
}
}
X
View(M)
A <- matrix( c( 1,2,3,4,5,6,7,8,9), 3, 3, TRUE)
colnames(A) <- c('col1','col2','col3')
rownames(A) <- c('row1','row2','row3')
A
diag(A)
det(A)
Solve(A)
t(A) %*% A
eigen(A)
B <- matrix( c(1,1,3, 5,2,6, -2,-1,-3), 3, 3, TRUE)
B
B <- B%*%B%*%B
B
B <- matrix( c(1,1,2, 5,2,7, -2,-1,-3), 3, 3, TRUE)
B
M <- matrix( c( 1,2,3,8,2,9), 3, 2, TRUE)
M
N <- matrix( c( 5,4,8,2), 2, 2, TRUE)
N
M %*% N
M %*% solve(N)
M %*% t(N)
3 *( (M %*% solve(N)) +( M %*% t(N) ) )
J <- matrix( c(1, -2, 3, 2, 1, 1, -3, 2, -2), 3, 3, TRUE)
J
j <- c(7, 4, -10)
j
showEqn(J , j )
Solve(J , j )
plotEqn3d(J , j )
echelon(J, j, verbose= TRUE, fraction= TRUE)
X <- matrix( c( 1,2,3,4,5,6,7,8,9), 3, 3, TRUE)
X
for (r in 1:3 ){
for (c in 1:3 ){
if( r==1 ){
if( c==1 | c==2 | c==3){
X[r,c]=0
}
}
if ( c==1 ){
if ( r==2 | r==3 ){
X[r,c]=1
}
}
}
}
X
B <- B%*%B%*%B
B
B <- matrix( c(1,1,2, 5,2,7, -2,-1,-3), 3, 3, TRUE)
B
# ecelon form
echelon(J, j, verbose= TRUE, fraction= TRUE)
